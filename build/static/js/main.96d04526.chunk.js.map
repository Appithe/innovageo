{"version":3,"sources":["firebase/firebaseConfig.js","firebase/database.js","pages/MapView/componets/ItemGallery/index.jsx","components/NavBar/navBar.jsx","pages/MapView/index.jsx","App.jsx","pages/Login/index.jsx","pages/NewUbicationForm/index.jsx","pages/UbicationDetail/index.jsx","routes/routes.jsx","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","ItemGallery","props","srcImg","lugarID","url","Card","style","marginTop","marginLeft","width","Img","variant","src","Body","Title","directionName","Text","whiteSpace","overflow","textOverflow","Button","href","NavBar","useState","isLogin","setIslogin","route","setRoute","auth","getAuth","currentUser","useEffect","onAuthStateChanged","user","console","log","email","Navbar","bg","expand","className","Container","Brand","xmlns","height","fill","class","viewBox","fill-rule","d","Toggle","aria-controls","Collapse","id","Form","FormControl","type","placeholder","aria-label","Select","value","Nav","maxHeight","navbarScroll","Link","onClick","signOut","then","catch","error","Map","styles","mapa","position","lat","lng","turf","bbox","MapContainer","center","zoom","scrollWheelZoom","enableZoom","TileLayer","attribution","Marker","Popup","Polygon","pathOptions","color","positions","MapView","lugares","setLugares","a","getDocs","collection","querySnapshot","docs","map","doc","direccion_lugar","data","getLugares","fluid","Row","Col","xs","lugar","md","App","Login","loginCard","margin","form","display","flexDirection","alignItems","formContainer","justifyContent","bodyContainer","googleAuthProvider","GoogleAuthProvider","navigate","useNavigate","setEmail","password","setPassword","Header","Group","controlId","Label","Control","onChange","e","target","createUserWithEmailAndPassword","userCredential","errorCode","code","errorMessage","message","Footer","Stack","gap","signInWithPopup","result","credentialFromResult","accessToken","credential","credentialFromError","NewUbicationForm","nombre","setNombre","contacto","setContacto","habitaciones","setHabitaciones","setDireccionLugar","createUbucation","addDoc","docRef","as","column","sm","ulsa","polyline","from","to","distance","units","Polyline","Math","round","UbicationDetail","setId","direccionLugar","srcMainImg","container","gridContainer","gridTemplateColumns","gridTemplateRows","gridColumnGap","gridRowGap","mainImage","gridColumn","gridRow","topLeft","topRight","bottomLeft","bottomRight","info","getDoc","docSnap","exists","get","getLugar","document","location","indexOf","split","getIdFromUrl","Image","rounded","InputGroup","readOnly","text","toast","Rutas","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.96d04526.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBa48s2Glvd0mzfRJIEHt1YUW_AMy5HNzM\",\n    authDomain: \"innovageo-5f173.firebaseapp.com\",\n    projectId: \"innovageo-5f173\",\n    storageBucket: \"innovageo-5f173.appspot.com\",\n    messagingSenderId: \"63170895838\",\n    appId: \"1:63170895838:web:f43357338f521c3f7c474f\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nexport default app;","import app from './firebaseConfig';\n\nimport { getFirestore } from \"firebase/firestore\";\n\nconst db = getFirestore(app);\n\nexport default db;","import React from 'react';\nimport { Card, Button } from 'react-bootstrap';\n\nfunction ItemGallery(props) {\n\n    const styles = {\n        container: {\n            marginTop: '30px',\n            marginLeft: '35px',\n            width: '206px'\n        },\n    }\n\n    const srcImg = 'https://picsum.photos/seed/'+props.lugarID+'/206/160';\n    const url = '/ubicationDetail?' + props.lugarID;\n\n    return (\n        <Card style={styles.container}>\n            <Card.Img variant=\"top\" src={srcImg}/>\n            <Card.Body>\n                <Card.Title>{props.directionName}</Card.Title>\n                <Card.Text style={{\n                    width: 'auto',\n                    whiteSpace: 'nowrap',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                }}>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                </Card.Text>\n                <Button variant=\"primary\" href={url}>Ver mas</Button>\n            </Card.Body>\n        </Card >\n    );\n}\n\nexport default ItemGallery;","import React, { useState, useEffect } from 'react';\nimport { Navbar, Nav, Form, Container, FormControl } from 'react-bootstrap';\n\nimport { getAuth, onAuthStateChanged, signOut } from \"firebase/auth\";\n\n\nfunction NavBar() {\n\n    const [isLogin, setIslogin] = useState(false)\n    const [route, setRoute] = useState(\"/login\");\n\n    const auth = getAuth();\n    const user = auth.currentUser;\n    useEffect(() => {\n        onAuthStateChanged(auth, (user) => {\n            if (user) {\n                setIslogin(true)\n                setRoute(\"/\")\n                console.log(user.email);\n            } else {\n                setRoute(\"/login\")\n                setIslogin(false)\n            }\n        });\n    }, [])\n\n    const logOut = () => {\n        signOut(auth).then(() => {\n            console.log('User is signed out');\n            setRoute(\"/login\")\n            setIslogin(false)\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\" className=\"sticky-top\">\n            <Container>\n                <Navbar.Brand href=\"/\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-pin-map-fill m-1\" viewBox=\"0 0 16 16\">\n                        <path fill-rule=\"evenodd\" d=\"M3.1 11.2a.5.5 0 0 1 .4-.2H6a.5.5 0 0 1 0 1H3.75L1.5 15h13l-2.25-3H10a.5.5 0 0 1 0-1h2.5a.5.5 0 0 1 .4.2l3 4a.5.5 0 0 1-.4.8H.5a.5.5 0 0 1-.4-.8l3-4z\" />\n                        <path fill-rule=\"evenodd\" d=\"M4 4a4 4 0 1 1 4.5 3.969V13.5a.5.5 0 0 1-1 0V7.97A4 4 0 0 1 4 3.999z\" />\n                    </svg>\n                    Inovvageo\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"navbarScroll\" />\n                <Navbar.Collapse id=\"navbarScroll\" className=\"justify-content-between\">\n                    <Form className=\"d-flex\">\n                        <FormControl\n                            type=\"search\"\n                            placeholder=\"Universidad\"\n                            className=\"me-2\"\n                            aria-label=\"Search\"\n                        />\n                        <Form.Select aria-label=\"Default select example\" className=\"me-2\">\n                            <option>Precio</option>\n                            <option value=\"1\">$</option>\n                            <option value=\"2\">$$</option>\n                            <option value=\"3\">$$$</option>\n                        </Form.Select>\n                        <Form.Select aria-label=\"Default select example\" className=\"me-2\">\n                            <option>Distancia</option>\n                            <option value=\"1\">-5 minutos</option>\n                            <option value=\"2\">entre 5 y 10 minutos</option>\n                            <option value=\"3\">+10 minutos</option>\n                        </Form.Select>\n                    </Form>\n                    <Nav\n                        style={{ maxHeight: '100px' }}\n                        navbarScroll\n                    >\n                        {\n                            isLogin ?\n                                <Nav.Link href=\"/newUbicationForm\">Agregar ubicación</Nav.Link> :\n                                null\n                        }\n                        <Nav.Link href={route} onClick={logOut}>\n                            {isLogin ? 'Cerrar sesión' : 'Iniciar sesión'}\n                        </Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default NavBar;","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { collection, getDocs } from \"firebase/firestore\";\nimport db from '../../firebase/database'\n\nimport ItemGallery from './componets/ItemGallery';\nimport NavBar from '../../components/NavBar/navBar';\n\nimport { MapContainer, TileLayer, Marker, Popup, Polygon } from 'react-leaflet';\nimport * as turf from '@turf/turf'\n\nfunction Map(props) {\n\n    const styles = {\n        mapa: {\n            width: props.width,\n            height: props.height,\n        },\n    }\n\n    const position = [props.lat, props.lng]\n    const polygon = [\n        [\n            21.152236028159873,\n            -101.71640396118164,\n        ],\n        [\n            21.14721294096405,\n            -101.71550273895262,\n        ],\n        [\n            21.14659254785756,\n            -101.71492338180542,\n        ],\n        [\n            21.14741306721832,\n            -101.71046018600464,\n        ],\n        [\n            21.148033456888157,\n            -101.70870065689087,\n        ],\n        [\n            21.149494364233398,\n            -101.70799255371094,\n        ],\n        [\n            21.154617432274843,\n            -101.71013832092285,\n        ],\n        [\n            21.152236028159873,\n            -101.71640396118164,\n        ]\n    ]\n    const purpleOptions = { color: 'purple' }\n\n    var points = turf.randomPoint(10, { bbox: [-101.716737, 21.146052, -101.707778, 21.154597] })\n\n    const loadPoints = () => {\n        points.features.forEach((point) => {\n            console.log(point.geometry.coordinates);\n        })\n    }\n\n    return (\n        <MapContainer center={position} zoom={props.zoom} scrollWheelZoom={props.enableZoom} style={styles.mapa}>\n            <TileLayer\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <Marker position={position}>\n                <Popup>\n                    Universidad de LaSalle Bajio\n                </Popup>\n            </Marker>\n            <Polygon pathOptions={purpleOptions} positions={polygon} />\n        </MapContainer>\n    );\n}\n\n// TODO: implement leaflet clustering\n// TODO: show the randomPoints like markers on the map\n\nfunction MapView() {\n    const [lugares, setLugares] = useState([])\n\n    useEffect(() => {\n        getLugares()\n    }, [])\n\n    async function getLugares() {\n        const querySnapshot = await getDocs(collection(db, \"lugares\"));\n        setLugares(\n            querySnapshot.docs.map((doc) => ({\n                id: doc.id,\n                direccion_lugar: doc.data().direccion_lugar\n            }))\n        );\n    }\n\n    return (\n        <Container fluid>\n            <NavBar />\n            <Row>\n                <Col xs={5}>\n                    <Row>\n                        {\n                            lugares.map((lugar) => (\n                                <ItemGallery directionName={lugar.direccion_lugar} lugarID={lugar.id} xs={4} md={6} />\n                            ))\n                        }\n                    </Row>\n                </Col>\n                <Col xs={7} className=\"position-fixed end-0\">\n                    <Map width={'100%'} height={'100vh'} enableZoom={true} lat={21.152721752719273} lng={-101.71174153086338} zoom={20} />\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default MapView","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport './App.css';\n\nimport MapView from './pages/MapView';\n\nfunction App() {\n  return (\n    <Container fluid>\n      <MapView />\n    </Container>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n    Container,\n    Card,\n    Button,\n    Stack,\n    Form\n} from 'react-bootstrap';\nimport {\n    createUserWithEmailAndPassword,\n    getAuth,\n    GoogleAuthProvider,\n    signInWithPopup,\n} from 'firebase/auth';\n\nimport app from '../../firebase/firebaseConfig'\nimport NavBar from '../../components/NavBar/navBar'\n\nconst Login = () => {\n    const styles = {\n        loginCard: {\n            height: '552px',\n            width: '612px',\n            margin: '3em'\n        },\n        form: {\n            display: 'flex',\n            width: '350px',\n            flexDirection: 'column',\n            alignItems: 'center'\n        },\n        formContainer: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        bodyContainer: {\n            width: 'fit-content',\n            height: 'fit-content',\n        }\n    }\n\n    const auth = getAuth(app);\n    const googleAuthProvider = new GoogleAuthProvider();\n\n    let navigate = useNavigate();\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const simpleCreateUser = () => {\n        createUserWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                const user = userCredential.user;\n                navigate(\"/\")\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n\n                console.log(errorCode);\n                console.log(errorMessage);\n            })\n    }\n\n    const googleCreateUser = () => {\n        signInWithPopup(auth, googleAuthProvider)\n            .then((result) => {\n                const credential = GoogleAuthProvider.credentialFromResult(result);\n                const token = credential.accessToken;\n                const user = result.user;\n\n                navigate(\"/\")\n            }).catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                const email = error.email;\n                const credential = GoogleAuthProvider.credentialFromError(error);\n\n                console.log(errorCode)\n                console.log(errorMessage)\n                console.log(email)\n                console.log(credential)\n            });\n    }\n\n    const facebookCreateUser = () => {\n        console.log('facebook');\n    }\n\n    return (\n        <Container>\n            <NavBar />\n            <Container style={styles.bodyContainer}>\n                <Card className=\"shadow\" style={styles.loginCard}>\n                    <Card.Header>Iniciar sesión ó registro</Card.Header>\n                    <Card.Body style={styles.formContainer}>\n                        <Card.Title className=\"mb-5\">Bienvenido</Card.Title>\n                        <Form style={styles.form}>\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                <Form.Label>Correo</Form.Label>\n                                <Form.Control type=\"email\" placeholder=\"Correo\" onChange={(e) => setEmail(e.target.value)} />\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                                <Form.Label>Contraseña</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Contraseña\" onChange={(e) => setPassword(e.target.value)} />\n                            </Form.Group>\n                            <Button variant=\"primary\" onClick={simpleCreateUser}>\n                                Continuar\n                            </Button>\n                        </Form>\n                    </Card.Body>\n                    <Card.Footer >\n                        <Stack gap={2} className=\"col-md-5 mx-auto\">\n                            <Button variant=\"outline-primary\" onClick={facebookCreateUser}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" class=\"bi bi-facebook m-1\" viewBox=\"0 0 16 16\">\n                                    <path d=\"M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951z\" />\n                                </svg>\n                                Continua con facebook\n                            </Button>\n                            <Button variant=\"outline-primary\" onClick={googleCreateUser}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" class=\"bi bi-google m-1\" viewBox=\"0 0 16 16\">\n                                    <path d=\"M15.545 6.558a9.42 9.42 0 0 1 .139 1.626c0 2.434-.87 4.492-2.384 5.885h.002C11.978 15.292 10.158 16 8 16A8 8 0 1 1 8 0a7.689 7.689 0 0 1 5.352 2.082l-2.284 2.284A4.347 4.347 0 0 0 8 3.166c-2.087 0-3.86 1.408-4.492 3.304a4.792 4.792 0 0 0 0 3.063h.003c.635 1.893 2.405 3.301 4.492 3.301 1.078 0 2.004-.276 2.722-.764h-.003a3.702 3.702 0 0 0 1.599-2.431H8v-3.08h7.545z\" />\n                                </svg>\n                                Continua con Gmail\n                            </Button>\n                        </Stack>\n                    </Card.Footer>\n                </Card>\n            </Container>\n        </Container>\n    )\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport {\n    Container,\n    Row,\n    Col,\n    Form,\n    Button,\n    Modal\n} from 'react-bootstrap';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport { collection, addDoc } from 'firebase/firestore';\nimport db from '../../firebase/database'\n\nimport NavBar from '../../components/NavBar/navBar';\n\n// TODO: implement leaflet geocoding \nconst NewUbicationForm = () => {\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [nombre, setNombre] = useState('');\n    const [contacto, setContacto] = useState('');\n    const [habitaciones, setHabitaciones] = useState('');\n    const [direccion_lugar, setDireccionLugar] = useState('');\n\n    const styles = {\n        mapa: {\n            width: '100%',\n            height: '800px'\n        },\n    }\n\n    const position = {\n        lat: 21.116667,\n        lng: -101.683334\n    }\n\n    const createUbucation = async () => {\n        try {\n            const docRef = await addDoc(collection(db, \"lugares\"), {\n                nombre: nombre,\n                contacto: contacto,\n                habitaciones: habitaciones,\n                direccion_lugar: direccion_lugar,\n            });\n            console.log(\"Document written with ID: \", docRef.id);\n        } catch (e) {\n            console.error(\"Error adding document: \", e);\n        }\n    }\n\n    return (\n        <Container>\n            <NavBar />\n            <Form className=\"m-4\">\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label column sm={2}>Nombre del arrendador*</Form.Label>\n                    <Col sm={10}>\n                        <Form.Control placeholder=\"Nombre\" onChange={(e) => setNombre(e.target.value)} />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label column sm={2}>Telefono del arrendador*</Form.Label>\n                    <Col sm={10}>\n                        <Form.Control placeholder=\"Numero\" onChange={(e) => setContacto(e.target.value)} />\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label column sm={2}>Numero de habitaciones*</Form.Label>\n                    <Col sm={10}>\n                        <Form.Control type=\"number\" placeholder=\"Numero de habitaciones\" onChange={(e) => setHabitaciones(e.target.value)} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row} className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label column sm={2}>Dirección del lugar*</Form.Label>\n                    <Col sm={10}>\n                        <Form.Control placeholder=\"Dirección\" onChange={(e) => setDireccionLugar(e.target.value)} />\n                    </Col>\n                </Form.Group>\n                <MapContainer center={position} zoom={13} style={styles.mapa}>\n                    <TileLayer\n                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                </MapContainer>\n                <Button variant=\"primary\" className=\"my-3\" onClick={createUbucation}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-plus-lg me-1\" viewBox=\"0 0 16 16\">\n                        <path fill-rule=\"evenodd\" d=\"M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z\" />\n                    </svg>\n                    Agregar ubicación\n                </Button>\n            </Form>\n        </Container>\n    )\n}\n\nexport default NewUbicationForm;","import React, { useState, useEffect } from 'react';\nimport {\n    Col,\n    Container,\n    Image,\n    Row,\n    InputGroup,\n    FormControl,\n    Button,\n} from 'react-bootstrap';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport * as turf from '@turf/turf'\nimport { Toaster, toast } from 'react-hot-toast'\nimport { doc, getDoc } from \"firebase/firestore\";\nimport db from '../../firebase/database'\n\nimport NavBar from '../../components/NavBar/navBar';\n\nfunction Map(props) {\n\n    const styles = {\n        mapa: {\n            width: props.width,\n            height: props.height,\n        },\n    }\n\n    const position = [props.lat, props.lng];\n    const ulsa = [21.15071, -101.7111];\n\n    const polyline = [\n        position,\n        ulsa,\n    ];\n    const limeOptions = { color: 'lime' };\n\n    var from = turf.point(position);\n    var to = turf.point(ulsa);\n    var options = { units: 'kilometers' };\n\n    var distance = turf.distance(from, to, options);\n\n    return (\n        <MapContainer center={position} zoom={props.zoom} scrollWheelZoom={props.enableZoom} style={styles.mapa}>\n            <TileLayer\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <Polyline pathOptions={limeOptions} positions={polyline} >\n                <Popup>\n                    Distancia: {Math.round(distance * 1000) + 'm'}\n                </Popup>\n            </Polyline>\n            <Marker position={position}>\n                <Popup>\n                    Cima del sol 151\n                </Popup>\n            </Marker>\n            <Marker position={ulsa}>\n                <Popup>\n                    Universidad de LaSalle Bajio\n                </Popup>\n            </Marker>\n        </MapContainer>\n    );\n}\n\nconst UbicationDetail = () => {\n    const [id, setId] = useState();\n    const [contacto, setContacto] = useState();\n    const [direccionLugar, setDireccionLugar] = useState();\n    const [habitaciones, setHabitaciones] = useState();\n    const [nombre, setNombre] = useState();\n\n    const srcMainImg = 'https://picsum.photos/seed/' + id + '/595/512';\n\n    const styles = {\n        container: {\n            marginTop: '50px',\n        },\n        gridContainer: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(4 1fr)',\n            gridTemplateRows: 'repeat(2 1fr)',\n            gridColumnGap: '18px',\n            gridRowGap: '18px',\n        },\n        mainImage: {\n            gridColumn: '1 / span 2',\n            gridRow: '1 / span 2',\n        },\n        topLeft: {\n            gridColumn: '3 / span 1',\n            gridRow: '1 / span 1',\n        },\n        topRight: {\n            gridColumn: '4 / span 1',\n            gridRow: '1 / span 1',\n        },\n        bottomLeft: {\n            gridColumn: '3 / span 1',\n            gridRow: '2 / span 1',\n        },\n        bottomRight: {\n            gridColumn: '4 / span 1',\n            gridRow: '2 / span 1',\n        },\n        info: {\n            margin: '20px 0px',\n        },\n        mapa: {\n            width: '1210px',\n            height: '744px',\n        }\n    }\n\n    useEffect(() => {\n        getLugar();\n    })\n\n    useEffect(() => {\n        getIdFromUrl();\n    }, [])\n\n    function getIdFromUrl() {\n        var url = document.location.href;\n        if (url.indexOf('?') > 0) {\n            setId(url.split('?')[1]);\n        }\n    }\n\n    async function getLugar() {\n        try {\n            const docRef = doc(db, \"lugares\", id);\n            const docSnap = await getDoc(docRef);\n\n            if (docSnap.exists()) {\n                setContacto(docSnap.get(\"contacto\"));\n                setDireccionLugar(docSnap.get(\"direccion_lugar\"));\n                setHabitaciones(docSnap.get(\"habitaciones\"));\n                setNombre(docSnap.get(\"nombre\"));\n            } else {\n                console.log(\"No such document!\");\n            }\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    return (\n        <Container fluid>\n            <Toaster />\n            <NavBar />\n            <Container style={styles.container}>\n                <h1>{direccionLugar}</h1>\n                <Container style={styles.gridContainer}>\n                    <Image style={styles.mainImage} src={srcMainImg} rounded />\n                    <Image style={styles.topLeft} src=\"https://picsum.photos/id/1065/297/247\" rounded />\n                    <Image style={styles.topRight} src=\"https://picsum.photos/id/1068/297/247\" rounded />\n                    <Image style={styles.bottomLeft} src=\"https://picsum.photos/id/163/297/247\" rounded />\n                    <Image style={styles.bottomRight} src=\"https://picsum.photos/id/311/297/247\" rounded />\n                </Container>\n                <Container style={styles.info}>\n                    <Row>\n                        <Col>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Text>Arrendador</InputGroup.Text>\n                                <FormControl value={nombre} readOnly />\n                            </InputGroup>\n                        </Col>\n                        <Col>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Text>Contacto</InputGroup.Text>\n                                <FormControl value={contacto} readOnly />\n                                <CopyToClipboard text={contacto} >\n                                    <Button variant=\"outline-secondary\" onClick={() => toast(\"Texto copiado\")}>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-files\" viewBox=\"0 0 16 16\">\n                                            <path d=\"M13 0H6a2 2 0 0 0-2 2 2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h7a2 2 0 0 0 2-2 2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm0 13V4a2 2 0 0 0-2-2H5a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1zM3 4a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4z\" />\n                                        </svg>\n                                    </Button>\n                                </CopyToClipboard>\n                            </InputGroup>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Text>Numero de habitaciones disponibles</InputGroup.Text>\n                                <FormControl value={habitaciones} readOnly />\n                            </InputGroup>\n                        </Col>\n                    </Row>\n                </Container>\n                <h2>Servicos que ofrece</h2>\n                <Container style={styles.info}>\n                    <Row>\n                        <Col>\n                            <li>Lorem ipsum dolor sit amet</li>\n                            <li>Consectetur adipiscing elit</li>\n                            <li>Amet, pretium a ultrices dui</li>\n                            <li>Sollicitudin quis suspendisse maecenas</li>\n                        </Col>\n                        <Col>\n                            <li>Lorem ipsum dolor sit amet</li>\n                            <li>Consectetur adipiscing elit</li>\n                            <li>Amet, pretium a ultrices dui</li>\n                            <li>Sollicitudin quis suspendisse maecenas</li>\n                        </Col>\n                        <Col>\n                            <li>Lorem ipsum dolor sit amet</li>\n                            <li>Consectetur adipiscing elit</li>\n                            <li>Amet, pretium a ultrices dui</li>\n                            <li>Sollicitudin quis suspendisse maecenas</li>\n                        </Col>\n                    </Row>\n                </Container>\n                <h2>Donde se ubica?</h2>\n                <Container style={styles.info}>\n                    <Map width={'1210px'} height={'744px'} enableZoom={false} lat={21.150306} lng={-101.713420} zoom={17} />\n                </Container>\n            </Container>\n        </Container>\n    )\n}\n\nexport default UbicationDetail;","import React from 'react';\nimport { Routes, Route } from \"react-router-dom\";\n\nimport App from '../App'\nimport Login from '../pages/Login';\nimport NewUbicationForm from '../pages/NewUbicationForm';\nimport UbicationDetail from '../pages/UbicationDetail';\n\nconst Rutas = () => {\n    return (\n        <Routes>\n            <Route path=\"/\" element={<App />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/newUbicationForm\" element={<NewUbicationForm />} />\n            <Route path=\"/ubicationDetail\" element={<UbicationDetail />} />\n        </Routes>\n    );\n}\n\nexport default Rutas;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport Rutas from './routes/routes';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Rutas />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}